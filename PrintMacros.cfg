[gcode_macro PRINT_START]
gcode:
  Lights_On
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  
  {% if target_bed > 65 %}
    CARTOGRAPHER_MODEL_SELECT NAME=hot
  {% else %}
    CARTOGRAPHER_MODEL_SELECT NAME=default
  {% endif %}
    
    G90 ; use absolute coordinates
	M83 ; extruder relative mode
	M140 S{target_bed} ; Set Bed Temperature
	SET_FAN_SPEED FAN=Filter SPEED=1
    #_BED_FAN_SET
	M104 S150 ; Anti-Ooze
	G28 Y X
	M190 S{target_bed} ; Bed Temp Stabilise
    
	G28 Z
	Z_TILT_ADJUST
    BED_MESH_CALIBRATE ADAPTIVE=1

	M104 S{target_extruder} ; set final nozzle temp
    SERVICE_TOOLHEAD
	M109 S{target_extruder} ; wait for nozzle temp to stabilize
    PURGE
	PRIME
    #UPDATE_DELAYED_GCODE ID=_BED_FAN_MONITOR DURATION=1
    #RESPOND TYPE=COMMAND MSG="Bed Fans Monitor Active"

[gcode_macro Purge]
gcode:
	{% if printer.extruder.can_extrude|lower != 'true' %} # Checking for minimum extrusion temperature
      # Check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)
      M109 S240 T0 # Set temperature and wait, 240 deg C is a good value for most of filament types.
    {% endif %}
	G90 ; use absolute coordinates
	M83 ; extruder relative mode
	G1 Z8 F8000
    G92 E0
	
	M204 S35000 ; set accel
	G1 X325 Y0 F40000 ; Purge location
	G1 Z0.2 F5000 ; go down to bed

	G1 E5 F160 ; Pressurise Hotend
	G1 Z3 E25 F100 ; purge a tad
	G1 Z8 F10000 ; move up
	G1 X300 Y0 F10000 ; move over


[gcode_macro Prime]
gcode:
	{% if printer.extruder.can_extrude|lower != 'true' %} # Checking for minimum extrusion temperature
      # Check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)
      M109 S240 T0 # Set temperature and wait, 240 deg C is a good value for most of filament types.
    {% endif %}
	G90 ; use absolute coordinates
	M83 ; extruder relative mode
	G1 Z8 F8000
    G92 E0	
	
	M204 S35000 ; set accel
	G1 X300 Y0 F40000 ; position of prime line start
	G1 Z0.2 F5000 ; go to print height
	
	G1 X200 F6000 E15 ; draw the first line
	G1 Y1 F30000 ; move over a tad
	G1 X225 F6000 E4 ; Draw a smaller line
	G1 X250 F8000 E-2; Coast
	G1 Z0.5 F8000 ; lift nozzle
	G92 E0 ; reset extruder.


[gcode_macro Service_Toolhead]
gcode:
  G90                                                                                  ; absolute positioning
  G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F10000  ; park toolhead at front center    

[gcode_macro Centre_Toolhead]
gcode:
  G90                                                                                  ; absolute positioning
  G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F24000  ; park toolhead at front center      


[gcode_macro PRINT_END]
gcode:
    G91
    G1 Z5 F6000 ; Move bed to current height + 5mm
    G90
    #SET_LED LED="Toolhead" RED=0 GREEN=1 BLUE=0 SYNC=0 TRANSMIT=1
    G1 E-5 F25000 ; Fast Retract
    
    Service_Toolhead
    Tip_Shape

    M140 S0 ; turn off heatbed
    M104 S0 ; turn off hotend

    G1 E-10 F4000 ; retract a tad

    {% if printer.toolhead.position.z < 250 %}
        G1 Z300 F4000 ; Move bed down to to 300mm
    {% endif %}
  
    M107 ; turn off fan
    SET_FAN_SPEED FAN=Bed_Fans SPEED=0


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F2000                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        Service_Toolhead
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}
    

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT




    
